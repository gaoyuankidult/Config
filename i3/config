# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout somewhen, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $term terminator
set $browser google-chrome

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below. ISO 10646 = Unicode
font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, if you need a lot of unicode glyphs or
# right-to-left text rendering, you should instead use pango for rendering and
# chose a FreeType font, such as:
# font pango:DejaVu Sans Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec $term
#bindsym $mod+Return exec $term
bindsym $mod+Return exec $term
bindsym $mod+g exec $browser 

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal and vertical orientation
bindsym $mod+b split h
bindsym $mod+v split v


# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
# bindsym $mod+s layout stacking
# bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the child container
#bindsym $mod+d focus child

set $ws1 1:Code
set $ws2 2:IDE
set $ws3 3:Web
set $ws4 4:LaTeX
set $ws6 6:Music

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# change workspace
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev

# resize
bindsym $mod+Shift+y resize shrink width 2 px or 2 ppt
bindsym $mod+Shift+i resize grow height 2 px or 2 ppt
bindsym $mod+Shift+u resize shrink height 5 px or 2 ppt
bindsym $mod+Shift+o resize grow width 2 px or 2 ppt


# Open a ranger terminal
bindsym $mod+r exec $term -x bash -c "stty -ixon && ranger"

# Open a floating ranger terminal
bindsym $mod+Shift+f exec $term -T "rangerTerm" -x bash -c "stty -ixon && ranger"
for_window [class="Terminator" title="rangerTerm"] floating enable, \
resize grow left 300, resize grow right 300, \
resize grow down 100, resize grow up 100 

# Open floating terminal
bindsym $mod+t exec --no-startup-id $term -T "metaTerm"
for_window [class="Terminator" title="metaTerm"] floating enable, \
resize grow left 120, resize grow right 120, \
resize grow down 30, resize grow up 30


# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

## STARTUP
exec_always --no-startup-id feh --no-fehbg --bg-scale  ~/Config/i3/wall.jpg &
#exec_always --no-startup-id compton --config /home/erik/.config/.compton.conf
exec --no-startup-id gnome-sound-applet
exec --no-startup-id gnome-settings-daemon
exec --no-startup-id nm-applet

#exec --no-startup-id i3-msg 'workspace 4:LaTeX; exec $term -x emacs25 -nw -T "LaTeX"-f ranger-mode'
exec --no-startup-id i3-msg 'workspace 3:Web; exec $browser'
exec --no-startup-id i3-msg 'workspace 6:Music; exec netease-cloud-music'

# assign workspace if excution not done correctly
# Assign Workspaces:
assign [class="netease-cloud-music"] $ws6
assign [class="Google-chrome"] $ws3
#assign [title="LaTeX"] $ws4

# create gaps configerations
gaps inner 20

# solve conflicts between gaps with feh
for_window [class=".*"] border pixel 0
hide_edge_borders both

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	colors {
		# Whole color settings
		background #000000
		statusline #1ec503
		separator  #FFFFFF

		# Type             border  background font
		focused_workspace  #1ec503 #000000 #1ec503
		active_workspace   #000000 #000000 #1ec503
		inactive_workspace #000000 #000000 #1ec503
		urgent_workspace   #aa0000 #990000 #ffffff
	}
    separator_symbol "|"
    workspace_buttons yes # Show workspace buttons
    strip_workspace_numbers no # strip away WS numbers
	position top # i3bar position
    
	# Using custom i3status.conf
	status_command i3status -c ~/.config/i3/i3status.conf
}


# adjust system volumns
bindsym $mod+Shift+F11 exec amixer -q set Master 2dB+ unmute
bindsym $mod+Shift+F12 exec amixer -q set Master 2dB- unmute
bindsym $mod+Shift+F10 exec amixer -D pulse set Master toggle

# open document for todo
bindsym $mod+w exec $term -T "todo" -x bash -c "stty -ixon && emacs -nw ~/Config/docs/todo/todo.tex"
for_window [class="Terminator" title="todo"] floating enable, \
resize grow left 20, resize grow right 300, \
resize grow down 200, resize grow up 250 

# open document for log 
bindsym $mod+s exec $term -T "log" -x bash -c "stty -ixon && emacs -nw ~/Config/docs/log/log.tex"
for_window [class="Terminator" title="log"] floating enable, \
resize grow left 100, resize grow right 100, \
resize grow down 200, resize grow up 250 

# set shortcut for starting and focusing on workflow
bindsym $mod+q workspace 1:Code; exec ~/Config/i3/workflow.sh;
bindsym $mod+a workspace $ws1; [title="Ranger"] focus

# make an instance of scratchpad
exec --no-startup-id $term -T "Scratch"
for_window [class="^Terminator$" title="Scratch"] move scratchpad

# set shortcut for scratch pad
bindsym $mod+Tab scratchpad show
bindsym $mod+Shift+Tab exec --no-startup-id "$term -T Scratch"
#bindsym $mod+Shift+Tab [class="^Terminator$" title="Scratch"] move scratchpad


# create Log out, Reboot, Poweroff bindings
mode "Exit (L)ogout, (R)eboot, (P)oweroff" {
        bindsym $mod+r reboot
        bindsym $mod+l exit
        bindsym $mod+p --no-startup-id i3exit shutdown, mode "default"
        # back to normal: Entr or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode "Exit (L)ogout, (R)eboot, (P)oweroff"
